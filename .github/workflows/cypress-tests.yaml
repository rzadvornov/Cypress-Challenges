name: Cypress Parallel Tests with Manual Splitting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3] # 3 parallel containers
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Get test files and split manually
      id: test-split
      run: |
        # Get all feature files
        SPEC_FILES=$(find . -name "*.feature" | sort)
        echo "All test files:"
        echo "$SPEC_FILES"
        
        # Split files manually across containers
        TOTAL_FILES=$(echo "$SPEC_FILES" | wc -l)
        FILES_PER_CONTAINER=$(( ($TOTAL_FILES + ${{ strategy.job-total }} - 1) / ${{ strategy.job-total }} ))
        START_INDEX=$(( (${{ strategy.job-index }} - 0) * $FILES_PER_CONTAINER ))
        
        # Select files for this container
        MY_FILES=$(echo "$SPEC_FILES" | sed -n "$((START_INDEX + 1)),$((START_INDEX + FILES_PER_CONTAINER))p")
        
        echo "Files for container ${{ strategy.job-index }}:"
        echo "$MY_FILES"
        
        # Convert to comma-separated list for Cypress
        SPEC_LIST=$(echo "$MY_FILES" | tr '\n' ',' | sed 's/,$//')
        echo "SPEC_LIST=$SPEC_LIST" >> $GITHUB_OUTPUT

    - name: Run Cypress tests on specific files
      id: run-cypress
      continue-on-error: true
      run: |
        echo "Running tests for container ${{ strategy.job-index }}:"
        echo "${{ steps.test-split.outputs.SPEC_LIST }}"
        
        npx cypress run --spec "${{ steps.test-split.outputs.SPEC_LIST }}"
          --browser chrome \
          --config "chromeWebSecurity=false" \
          --env "ELECTRON_EXTRA_LAUNCH_ARGS=--enable-unsafe-swiftshader --ignore-gpu-blocklist --use-gl=swiftshader"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: cypress-results-${{ strategy.job-index }}
        path: |
          cypress/reports
          cypress/screenshots
          cypress/videos
        if-no-files-found: ignore

  publish-results:
    needs: cypress-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: ./cypress-results

    - name: Combine results
      run: |
        mkdir -p combined-results
        find ./cypress-results -name "*.xml" -exec cp {} ./combined-results/ \;
        find ./cypress-results -name "*.png" -exec cp {} ./combined-results/ \;
        find ./cypress-results -name "*.mp4" -exec cp {} ./combined-results/ \;

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./combined-results
        keep_files: true